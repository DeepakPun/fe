name: CI/CD

on:
  push:
    branches: [master]
  # pull_request:
  # branches: [ main ]

jobs:
  print_message:
    runs-on: ubuntu-latest
    steps:
      - name: Running actions triggered by ${{github.event_name}}
        run: echo "Running actions triggered by ${{github.event_name}}"
  test:
    runs-on: ubuntu-latest
    needs: print_message
    strategy:
      matrix:
        node-version: [23.x]
        # node-version: [18.x, 20.x, 22.x, 23.x]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm install
      - name: Build the app
        run: npm run build
      - name: Preview the app
        run: echo "Previewing your app at port 3000 ... ..."
      - name: Run the tests and generate coverage report
        run: echo "Running tests and generating reports ... ..."

      # - name: Upload coverage to Codecov
      #   uses: codecov/codecov-action@v1

  build:
    runs-on: ubuntu-latest
    needs: [print_message]
    outputs:
      script-file: ${{steps.publish.outputs.script-file}}
    strategy:
      matrix:
        node-version: [23.x]
        # node-version: [18.x, 20.x, 22.x, 23.x]
    steps:
      - name: Print build message
        run: echo "Building your app ... ..."
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: npm install
      - name: Build the app
        run: npm run build
      - name: Publish JS filename
        id: publish
        run: find dist/assets/*.js -type f -execdir echo 'script-file={}' >> $GITHUB_OUTPUT ';'

  containerize:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [23.x]
        # node-version: [18.x, 20.x, 22.x, 23.x]
    needs: [print_message]
    steps:
      - name: Build docker container
        run: echo "Building and pushing docker container"
      # - name: Output filename
      #   run: echo "${{ needs.build.outputs.script-file }}"

  upload_artifact:
    runs-on: macos-latest
    strategy:
      matrix:
        node-version: [23.x]
    needs: [print_message]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: npm install
      - name: Build the app
        run: npm run build
      - name: Upload artifacts
        # uses: actions/upload-artifact@v3
        uses: actions/upload-artifact@v4
        # uses: actions/download-artifact@v4
        with:
          name: dist-files
          path: |
            dist
            package.json

  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [23.x]
        # node-version: [18.x, 20.x, 22.x, 23.x]
    needs: [print_message]
    steps:
      - name: Deploy the app
        run: echo "Deploying your app tow AWS or GCP or Azure... ..."